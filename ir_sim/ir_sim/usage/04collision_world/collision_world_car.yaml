world:
  height: 50  # the height of the world
  width: 50   # the height of the world
  step_time: 0.1  # 10Hz calculate each step
  sample_time: 0.1  # 10 Hz for render and data extraction 
  offset: [0, 0] # the offset of the world on x and y 

robots:
  type: 'robot_acker'  # # robot_omni, robot_diff, robot_acker
  number: 1
  state: [1, 1, 0, 0]  
  shape: [4.6, 1.6, 3, 1.6] # for acker (default)
  goal: [40, 40, 0] 
  vel_type: 'steer' # for acker:  'steer': linear velocity, steer angle
                                  #'angular': linear velocity, angular velocity of steer
                                  # 'simplify': linear velocity, rotation rate, do not consider the steer angle 
obstacles:
  - type: 'obstacle_circle'
    number: 2

    distribute: {mode: 'random', shapes: [1.2], rlow: [0, 0], rhigh: [50, 50], distance: 2, random_shape: False, shapes_low: 0.1, shapes_high: 1} 
    # distribute: {mode: 'manual', states: [[1, 1], [2, 1]], shapes: [0.5, 0.2]}  # shapes: radiuses 

    # dynamic: {sport: 'wander', sport_range: [0, 0, 10, 10], vel: 1.5}
    dynamic: {sport: 'default', goals: [[42, 11], [19, 29]], vel: 3}
    # dynamic: {sport: 'partol', goals: [[4, 1], [9, 9]], vel: [1, 1]}  waiting for development
    
    # general property 

  - type: 'obstacle_polygon'
    number: 2
    distribute: {mode: 'manual', states: [[13, 23, 0], [15, 43, 0]], shapes: [ [[1, 2], [3, 1.5], [4, 3], [2, 4]] ]} 

  - type: 'obstacle_block'
    number: 4

    # shapes: [[length, width]]
    distribute: {mode: 'random', rlow: [0.0, 0.0, -3.14], rhigh: [50.0, 50.0, 3.14], distance: 1, shapes: [[1, 4], [4, 5]], random_shape: True, shapes_low: [3, 3], shapes_high: [18, 18]}

    # distribute: {mode: 'manual', states: [ [4, 4, 1], [3, 6, 0] ], shapes: [[0.3, 0.3], [0.5, 0.4]]}
