world:
  height: 10  # the height of the world
  width: 10   # the height of the world
  step_time: 0.1  # 10Hz calculate each step
  sample_time: 0.1  # 10 Hz for render and data extraction 
  offset: [0, 0] # the offset of the world on x and y 

robots:
  type: 'robot_diff'  # # robot_omni, robot_diff, robot_acker
  number: 1
  state: [1, 1, 0]  
  radius: 0.2 # # for diff (default)
  goal: [9, 9, 0] 

obstacles:
  - type: 'obstacle_circle'
    number: 2
    distribute: {mode: 'random', shapes: [0.2], rlow: [0, 0], rhigh: [10, 10], distance: 1, random_shape: False, shapes_low: 0.1, shapes_high: 1} 
    dynamic: {sport: 'default', goals: [[4, 1], [9, 9]], vel: 0.3}
    # distribute: {mode: 'manual', states: [[1, 1], [2, 1]], shapes: [0.5, 0.2]}  # shapes: radiuses 
    # dynamic: {sport: 'wander', sport_range: [0, 0, 10, 10], vel: 0.5}
    
  - type: 'obstacle_polygon'
    number: 2
    distribute: {mode: 'manual', states: [[3, 3, 0], [9, 3, 0]], shapes: [ [[1, 2], [3, 1.5], [4, 3], [2, 4]] ]} 

  - type: 'obstacle_block'  # shapes: [[length, width]]
    number: 2
    distribute: {mode: 'random', rlow: [0.0, 0.0, -3.14], rhigh: [10.0, 10.0, 3.14], distance: 1, shapes: [[0.5, 0.4], [0.4, 0.2]], random_shape: True, shapes_low: [0.1, 0.1], shapes_high: [0.8, 0.8]}
    # distribute: {mode: 'manual', states: [ [4, 4, 1], [3, 6, 0] ], shapes: [[0.3, 0.3], [0.5, 0.4]]}
